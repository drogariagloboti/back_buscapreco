def busca_prod(cd_barra: str):
    return f"""SELECT top 1 
CD_PROD
FROM EST_PROD_CD_BARRA
WHERE CD_BARRA = '{cd_barra}'"""


def base_value(cd_prod: int, cd_filial: int, cd_bar: str):
    return f"""DECLARE @PROD INT;
DECLARE @FILIA INT;
SET @PROD = {cd_prod};--28775;83898;77107;83630;91250;89491;84896;87556
SET @FILIA = {cd_filial};--33;84
IF OBJECT_ID('tempdb..#TABLOID') IS NOT NULL 
BEGIN
	DROP TABLE #TABLOID 
END

IF OBJECT_ID('tempdb..#BASEVALUE') IS NOT NULL 
BEGIN
	DROP TABLE #BASEVALUE 
END

IF OBJECT_ID('tempdb..#PROCESS') IS NOT NULL 
BEGIN
	DROP TABLE #PROCESS 
END

IF OBJECT_ID('tempdb..#RESULT') IS NOT NULL 
BEGIN
	DROP TABLE #RESULT 
END

IF OBJECT_ID('tempdb..#RESULT_PRE_FINAL') IS NOT NULL 
BEGIN
	DROP TABLE #RESULT_PRE_FINAL 
END

IF OBJECT_ID('tempdb..#RESULT_FINAL') IS NOT NULL 
BEGIN
	DROP TABLE #RESULT_FINAL
END

IF OBJECT_ID('tempdb..#RESULT_PBM') IS NOT NULL 
BEGIN
	DROP TABLE #RESULT_PBM 
END

BEGIN
SELECT CD_PROD,COALESCE(TAB_PROD.VLR_GRP_PROD,0) AS VALOR
INTO #TABLOID
from EST_PROD_TABLOIDE_CPL TAB_PROD
LEFT JOIN EST_PROD_TABLOIDE_FILIAL TAB_FILIAL ON
TAB_FILIAL.CD_TABLOIDE = TAB_PROD.CD_TABLOIDE
LEFT JOIN EST_PROD_TABLOIDE TAB ON
TAB.CD_TABLOIDE = TAB_FILIAL.CD_TABLOIDE AND
TAB.CD_EMP = TAB_FILIAL.CD_EMP
where TAB_PROD.CD_PROD = @PROD
AND TAB_FILIAL.CD_FILIAL = @FILIA
AND TAB.DT_FIM>=FORMAT(GETDATE(), 'yyyy/MM/dd')
AND TAB.DT_INICIO<= GETDATE()
END

--SELECT * FROM #TABLOID

SELECT
TOP 1
*
INTO #BASEVALUE
FROM(
SELECT
PROD.CD_PROD,
PROD.DS_PROD,
PRECO.CD_FILIAL,
G.DS_COMPLETA,
PRECO.VLR_TABELA,
COALESCE(TAB.VALOR, 0) AS TABLOIDE,
CASE
	WHEN
		COALESCE(PROD_DESC.PERC_DESC,0) > COALESCE(FAMILIA_DESC.PERC_DESC,0)
		THEN
			COALESCE(PROD_DESC.PERC_DESC,0)
	WHEN
		COALESCE(PROD_DESC.PERC_DESC,0) <= COALESCE(FAMILIA_DESC.PERC_DESC,0)
		THEN
			COALESCE(FAMILIA_DESC.PERC_DESC,0)
END AS PERC_DESC,
CASE
	WHEN
		COALESCE(PROD_DESC.PERC_DESC,0) = 0 AND COALESCE(TAB.VALOR, 0) = 0 AND COALESCE(FAMILIA_DESC.PERC_DESC,0)=0
		THEN CAST(PRECO.VLR_TABELA AS decimal(10,2))
			
	WHEN
		COALESCE(PROD_DESC.PERC_DESC,0) > COALESCE(FAMILIA_DESC.PERC_DESC,0)
		THEN
			CASE 
			WHEN
			CAST(PRECO.VLR_TABELA-((PRECO.VLR_TABELA/100)*PROD_DESC.PERC_DESC)AS decimal(10,2)) <= COALESCE(TAB.VALOR,0)
			THEN CAST(PRECO.VLR_TABELA-((PRECO.VLR_TABELA/100)*PROD_DESC.PERC_DESC)AS decimal(10,2))
			ELSE 
				CASE
					WHEN COALESCE(TAB.VALOR,0) <> 0
					THEN
					CAST(COALESCE(TAB.VALOR,0) AS decimal(10,2))
					ELSE
					CAST(PRECO.VLR_TABELA-((PRECO.VLR_TABELA/100)*PROD_DESC.PERC_DESC)AS decimal(10,2)) END END
	WHEN
		COALESCE(PROD_DESC.PERC_DESC,0) <= COALESCE(FAMILIA_DESC.PERC_DESC,0)
		THEN
			CASE
			WHEN
			CAST(PRECO.VLR_TABELA-((PRECO.VLR_TABELA/100)*FAMILIA_DESC.PERC_DESC)AS decimal(10,2)) <= COALESCE(TAB.VALOR,0)
			THEN CAST(PRECO.VLR_TABELA-((PRECO.VLR_TABELA/100)*FAMILIA_DESC.PERC_DESC)AS decimal(10,2))
			ELSE 
				CASE
					WHEN COALESCE(TAB.VALOR,0) <> 0
						THEN CAST(COALESCE(TAB.VALOR,0) AS decimal(10,2)) 
						ELSE
						CAST(PRECO.VLR_TABELA-((PRECO.VLR_TABELA/100)*FAMILIA_DESC.PERC_DESC)AS decimal(10,2)) END END
END AS VALOR_FINAL
FROM EST_PROD PROD
LEFT JOIN EST_PROD_ATRIBUTOS_GLOBO G ON
G.CD_PROD = PROD.CD_PROD
AND G.CD_EMP = PROD.CD_EMP
LEFT JOIN EST_PROD_CD_BARRA BARRA ON
BARRA.CD_PROD = PROD.CD_PROD
AND BARRA.CD_EMP = PROD.CD_EMP
LEFT JOIN EST_PROD_PRECO PRECO ON
PRECO.CD_PROD = PROD.CD_PROD
AND PRECO.CD_EMP = PROD.CD_EMP
LEFT JOIN EST_PROD_TBL_DESC_PRC_FILIAL FILIAL_DESC ON
FILIAL_DESC.CD_FILIAL = PRECO.CD_FILIAL
AND FILIAL_DESC.CD_EMP = PRECO.CD_EMP
LEFT JOIN EST_PROD_TBL_DESC_EST_PROD PROD_DESC ON
PROD_DESC.CD_PROD = PROD.CD_PROD
AND PROD_DESC.CD_EMP = PROD.CD_EMP
AND PROD_DESC.CD_TBL_DESC = FILIAL_DESC.CD_TBL_DESC
LEFT JOIN EST_PROD_TBL_DESC DESCONT ON
DESCONT.CD_EMP = PROD.CD_EMP
AND DESCONT.CD_TBL_DESC = FILIAL_DESC.CD_TBL_DESC
LEFT JOIN EST_PROD_EST_ARV_MERCADOLOGICA MERCADOLOGICA ON
MERCADOLOGICA.CD_PROD = PROD.CD_PROD
AND MERCADOLOGICA.CD_EMP = PROD.CD_EMP
LEFT JOIN EST_ARV_MERC_FAMILIA FAMILIA ON
FAMILIA.CD_ARV_MERC_FAMILIA = MERCADOLOGICA.CD_ARV_MERC_FAMILIA
AND FAMILIA.CD_EMP = MERCADOLOGICA.CD_EMP
LEFT JOIN EST_PROD_TBL_DESC_EST_ARV_MERC_FAMILIA FAMILIA_DESC ON
FAMILIA_DESC.CD_ARV_MERC_FAMILIA = FAMILIA.CD_ARV_MERC_FAMILIA
AND FAMILIA_DESC.CD_TBL_DESC = DESCONT.CD_TBL_DESC
LEFT JOIN #TABLOID TAB on
TAB.CD_PROD = PROD.CD_PROD
WHERE PROD.CD_PROD = @PROD
AND PRECO.CD_FILIAL = @FILIA
AND (DESCONT.DT_FIM >= FORMAT(GETDATE(), 'yyyy/MM/dd') OR DESCONT.DT_FIM IS NULL)
AND PROD.CD_EMP = 1
AND DESCONT.CD_TP_DESCONTO = 1
GROUP BY 
PROD.CD_PROD
,PROD.DS_PROD
,PRECO.CD_FILIAL
,G.DS_COMPLETA
,PRECO.VLR_TABELA
,PROD_DESC.PERC_DESC
,FAMILIA_DESC.PERC_DESC
,PROD_DESC.PERC_DESC
,TAB.VALOR)TBT
ORDER BY TBT.PERC_DESC DESC;


--SELECT * FROM #BASEVALUE

SELECT
TOP 1
*
INTO #PROCESS
FROM(
SELECT 
#BASEVALUE.CD_PROD,
#BASEVALUE.DS_PROD,
#BASEVALUE.CD_FILIAL,
#BASEVALUE.DS_COMPLETA,
#BASEVALUE.VLR_TABELA,
#BASEVALUE.TABLOIDE,
#BASEVALUE.PERC_DESC,
#BASEVALUE.VALOR_FINAL,
CASE
	WHEN D.CD_TP_DESCONTO = 14 THEN
	CASE
	WHEN D.FLAG_AGREGAR_DESC_QTDE_AOS_DESCONTOS_EXISTENTES = 1 
		THEN CAST(#BASEVALUE.VALOR_FINAL-((#BASEVALUE.VALOR_FINAL/100)*PD.PERC_DESC) AS decimal(10,2))
		ELSE CAST(#BASEVALUE.VLR_TABELA-(#BASEVALUE.VLR_TABELA/100)*PD.PERC_DESC AS decimal)
		END
	ELSE 0 END AS ACIMA_DE,
COALESCE(ACIMA.QTDE_ACIMA,0) AS ACIMA,
COALESCE(COALESCE(ACIMA.QTDE_ACIMA,0)*PD.PERC_DESC,0) AS PERC_DESC_ACIMA
FROM 
 #BASEVALUE
LEFT JOIN EST_PROD_TBL_DESC_EST_PROD PD ON
	#BASEVALUE.CD_PROD = PD.CD_PROD 
LEFT JOIN EST_PROD_TBL_DESC_PRC_FILIAL FD  ON
	FD.CD_TBL_DESC = PD.CD_TBL_DESC
	AND #BASEVALUE.CD_FILIAL = FD.CD_FILIAL
LEFT JOIN 
(
SELECT
X.CD_TBL_DESC,
X.CD_EMP,
X.CD_TP_DESCONTO,
X.FLAG_AGREGAR_DESC_QTDE_AOS_DESCONTOS_EXISTENTES
FROM
EST_PROD_TBL_DESC X
WHERE
X.DT_FIM>=FORMAT(GETDATE(), 'yyyy/MM/dd')
and
X.DT_INI<=GETDATE()
) D ON
	D.CD_TBL_DESC = FD.CD_TBL_DESC
	AND D.CD_EMP = FD.CD_EMP
LEFT JOIN EST_PROD_TBL_DESC_QTDE_ACIMA ACIMA ON
	ACIMA.CD_TBL_DESC = D.CD_TBL_DESC
	AND ACIMA.CD_EMP = D.CD_EMP
WHERE #BASEVALUE.CD_FILIAL = @FILIA
AND #BASEVALUE.CD_PROD = @PROD
GROUP BY 
#BASEVALUE.CD_PROD,
#BASEVALUE.DS_PROD,
#BASEVALUE.CD_FILIAL,
#BASEVALUE.DS_COMPLETA,
#BASEVALUE.VLR_TABELA,
#BASEVALUE.TABLOIDE,
#BASEVALUE.PERC_DESC,
#BASEVALUE.VALOR_FINAL,
D.FLAG_AGREGAR_DESC_QTDE_AOS_DESCONTOS_EXISTENTES,
D.CD_TP_DESCONTO,
PD.PERC_DESC,
ACIMA.QTDE_ACIMA
) TBTEMP
ORDER BY TBTEMP.ACIMA_DE DESC


--SELECT * FROM #PROCESS


SELECT
TOP 1
*
INTO #RESULT
FROM(
SELECT
    #PROCESS.CD_PROD,
	#PROCESS.DS_PROD,
	#PROCESS.CD_FILIAL,
	#PROCESS.DS_COMPLETA,
	#PROCESS.VLR_TABELA,
	#PROCESS.TABLOIDE,
	#PROCESS.PERC_DESC,
	#PROCESS.VALOR_FINAL,
	#PROCESS.ACIMA_DE,
	#PROCESS.ACIMA,
	#PROCESS.PERC_DESC_ACIMA,
    COALESCE(QTDE.QTDE_PAGUE, 0) AS QTDE_PAGUE,
    COALESCE(QTDE.QTDE_LEVE, 0) AS QTDE_LEVE,
	CASE
		WHEN
		QTDE.AGREGACAO = 1
		THEN COALESCE(CAST((#PROCESS.VALOR_FINAL/QTDE.QTDE_LEVE)*QTDE.QTDE_PAGUE AS decimal(10,2)),0)
		ELSE COALESCE(CAST((#PROCESS.VLR_TABELA/QTDE.QTDE_LEVE)*QTDE.QTDE_PAGUE AS decimal(10,2)),0)
	END AS QTDE_PAGUE_VLR
FROM
    #PROCESS
LEFT JOIN EST_PROD_TBL_DESC_QTDE_EST_PROD QTDE_PROD ON
    #PROCESS.CD_PROD = QTDE_PROD.CD_PROD 
LEFT JOIN EST_PROD_TBL_DESC_QTDE_PRC_FILIAL QTDE_FILIAL ON
    QTDE_FILIAL.CD_FILIAL = #PROCESS.CD_FILIAL AND
    QTDE_FILIAL.CD_TBL_DESC_QTDE = QTDE_PROD.CD_TBL_DESC_QTDE
LEFT JOIN (
SELECT 
Y.CD_EMP,Y.CD_TBL_DESC_QTDE,Y.QTDE_PAGUE,Y.QTDE_LEVE,Y.AGREGACAO
FROM 
EST_PROD_TBL_DESC_QTDE Y
WHERE Y.DT_FIM >= FORMAT(GETDATE(), 'yyyy/MM/dd')
AND
Y.DT_INI<= GETDATE()) QTDE ON
    QTDE.CD_TBL_DESC_QTDE = QTDE_FILIAL.CD_TBL_DESC_QTDE
GROUP BY
	#PROCESS.CD_PROD,
	#PROCESS.DS_PROD,
	#PROCESS.CD_FILIAL,
	#PROCESS.DS_COMPLETA,
	#PROCESS.VLR_TABELA,
	#PROCESS.TABLOIDE,
	#PROCESS.PERC_DESC,
	#PROCESS.VALOR_FINAL,
	#PROCESS.ACIMA_DE,
	#PROCESS.ACIMA,
	QTDE.CD_TBL_DESC_QTDE,
	QTDE.QTDE_PAGUE,
	QTDE.QTDE_LEVE,
	QTDE.AGREGACAO,
	#PROCESS.PERC_DESC_ACIMA
	)TBTD
	GROUP BY 
	TBTD.ACIMA,
	TBTD.DS_PROD,
	TBTD.ACIMA_DE,
	TBTD.CD_FILIAL,
	TBTD.CD_PROD,
	TBTD.DS_COMPLETA,
	TBTD.PERC_DESC,
	TBTD.QTDE_LEVE,
	TBTD.QTDE_PAGUE,
	TBTD.QTDE_PAGUE_VLR,
	TBTD.TABLOIDE,
	TBTD.VALOR_FINAL,
	TBTD.VLR_TABELA,
	TBTD.PERC_DESC_ACIMA	
	ORDER BY TBTD.QTDE_LEVE DESC, TBTD.QTDE_PAGUE DESC, TBTD.QTDE_PAGUE_VLR DESC
	
	SELECT
	TOP 1
	*
	INTO #RESULT_PRE_FINAL
	FROM
	(SELECT
	#RESULT.CD_PROD,
	#RESULT.DS_PROD,
	#RESULT.CD_FILIAL,
	#RESULT.DS_COMPLETA,
	#RESULT.VLR_TABELA,
	#RESULT.TABLOIDE,
	#RESULT.PERC_DESC,
	#RESULT.VALOR_FINAL,
	#RESULT.ACIMA_DE,
	#RESULT.ACIMA,
	#RESULT.PERC_DESC_ACIMA,
	#RESULT.QTDE_PAGUE,
	#RESULT.QTDE_LEVE,
	#RESULT.QTDE_PAGUE_VLR,
	COALESCE(CAMP.QTDE_PROD,0) AS COMPRE_KIT,
	COALESCE(PROD_CAMP.QT_VENDA,0) AS LEVE_KIT,
	COALESCE(PROD_ALVO.CD_PROD,0) AS CD_PROD_KIT,
	COALESCE(PROD_ALVO.DS_PROD,'') AS PROD_KIT,
	COALESCE(PROD_ALVO_PRECO.VLR_TABELA,0) AS VALOR_DE_PROD_KIT,
	COALESCE(PROD_CAMP.VLR_VENDA,0) AS VALOR_PROD_KIT
	FROM
	#RESULT
	LEFT JOIN EST_PROD_EST_ARV_MERCADOLOGICA ARV_F ON
	ARV_F.CD_PROD = #RESULT.CD_PROD
	LEFT JOIN PDV_CAMPANHA_ADICIONAIS_EST_ARV_MERC_FAMILIA_CAMPANHA FAM_CAMP ON
	FAM_CAMP.CD_ARV_MERC_FAMILIA = ARV_F.CD_ARV_MERC_FAMILIA
	LEFT JOIN PDV_CAMPANHA_ADICIONAIS_PRC_FILIAL FIL_CAMP ON
	FIL_CAMP.CD_CAMPANHA_ADIC= FAM_CAMP.CD_CAMPANHA_ADIC AND
	FIL_CAMP.CD_FILIAL = #RESULT.CD_FILIAL
	LEFT JOIN 
	(SELECT
	*
	FROM
	PDV_CAMPANHA_ADICIONAIS Z WHERE Z.DT_VALID>=FORMAT(GETDATE(), 'yyyy/MM/dd') AND Z.DT_INICIO<= GETDATE()) CAMP ON
	CAMP.CD_CAMPANHA_ADIC = FIL_CAMP.CD_CAMPANHA_ADIC
	LEFT JOIN PDV_CAMPANHA_ADICIONAIS_EST_PROD PROD_CAMP ON
	PROD_CAMP.CD_CAMPANHA_ADIC = CAMP.CD_CAMPANHA_ADIC
	LEFT JOIN EST_PROD PROD_ALVO ON
	PROD_ALVO.CD_PROD = PROD_CAMP.CD_PROD
	LEFT JOIN EST_PROD_PRECO PROD_ALVO_PRECO ON
	PROD_ALVO_PRECO.CD_PROD = PROD_ALVO.CD_PROD
	AND PROD_ALVO_PRECO.CD_FILIAL = #RESULT.CD_FILIAL
	)TBT
	ORDER BY TBT.COMPRE_KIT DESC, TBT.LEVE_KIT DESC, TBT.VALOR_FINAL DESC


	SELECT
	#RESULT_PRE_FINAL.*,
	COALESCE(TBT.POR,0) AS PRE_VENCIDO,
	COALESCE(TBT.QtdProd,0) AS QT_PRE
	INTO #RESULT_FINAL
	FROM 
	#RESULT_PRE_FINAL
	LEFT JOIN (SELECT 
  REM.CD_REMESSA Remessa,
  REM.CD_FILIAL Filial,
  IT.CD_PROD CdProd,
  PROD.DS_PROD DescProd,
  IT.NUMERO_LOTE Lote,
  FORMAT(IT.DT_FABRIC, 'dd/MM/yyyy') as Fabricacao,
  FORMAT(IT.DT_VALIDADE, 'dd/MM/yyyy') as Validade,
  ISNULL(LOTE_IT.EAN, '') AS CdBarra,
  ISNULL(LOTE_IT.CD_TBL_DESC, 0) AS TabDescRemessa,	
  PV.VLR_TABELA AS DE,
  CPLTAB.VLR_DESC Desconto,
  ROUND(PV.VLR_TABELA - (PV.VLR_TABELA * (CPLTAB.VLR_DESC/100)),2) AS POR,
  ISNULL(LOTE.QTDE_PROD, 0) AS QtdProd
FROM EST_PROD_REM_PRE_VENC REM
INNER JOIN EST_PROD_REM_PRE_VENC_IT IT
  ON REM.CD_EMP = IT.CD_EMP
  AND REM.CD_REMESSA = IT.CD_REMESSA
INNER JOIN EST_PROD_CPL_LOTE LOTE
  ON LOTE.CD_EMP = IT.CD_EMP
  AND LOTE.CD_FILIAL = IT.CD_FILIAL
  AND LOTE.CD_PROD = IT.CD_PROD
  AND LOTE.NR_LOTE = IT.NUMERO_LOTE COLLATE LATIN1_GENERAL_CI_AS
INNER JOIN EST_PROD_REM_PRE_VENC_IT_LOTE LOTE_IT
  ON LOTE_IT.CD_EMP = LOTE.CD_EMP
  AND LOTE_IT.CD_FILIAL = LOTE.CD_FILIAL
  AND LOTE_IT.CD_LOTE = LOTE.CD_LOTE
  AND LOTE_IT.CD_REMESSA = IT.CD_REMESSA
INNER JOIN EST_PROD_CPL CPL
  ON CPL.CD_EMP = IT.CD_EMP
  AND CPL.CD_FILIAL = IT.CD_FILIAL
  AND CPL.CD_PROD = IT.CD_PROD
INNER JOIN EST_PROD PROD
  ON PROD.CD_EMP = CPL.CD_EMP
  AND PROD.CD_PROD = CPL.CD_PROD
INNER JOIN EST_PROD_TBL_DESC_PRE_VENCIDOS_CPL CPLTAB
  ON CPLTAB.CD_EMP = LOTE_IT.CD_EMP
  AND CPLTAB.CD_TBL_DESC = LOTE_IT.CD_TBL_DESC
INNER JOIN EST_PROD_PRECO PV
  ON PV.CD_EMP = IT.CD_EMP
  AND PV.CD_FILIAL = IT.CD_FILIAL
  AND PV.CD_PROD = IT.CD_PROD
WHERE REM.CD_EMP = 1
AND REM.STS_REMESSA = 2
AND ISNULL(LOTE.QTDE_PROD, 0) > 0
AND CPL.CD_FILIAL = {cd_filial}
AND LOTE_IT.EAN = '{cd_bar}'
AND FORMAT(IT.DT_VALIDADE, 'yyyy-MM-dd') >= FORMAT(GETDATE(), 'yyyy-MM-dd')
GROUP BY
 REM.CD_REMESSA,
  REM.CD_FILIAL,
  IT.CD_PROD,
  PROD.DS_PROD,
  IT.NUMERO_LOTE,
  FORMAT(IT.DT_FABRIC, 'dd/MM/yyyy'),
  FORMAT(IT.DT_VALIDADE, 'dd/MM/yyyy'),
  ISNULL(LOTE_IT.EAN, ''),
  ISNULL(LOTE_IT.CD_TBL_DESC, 0),	
  PV.VLR_TABELA,
  CPLTAB.VLR_DESC,
  ROUND(PV.VLR_TABELA - (PV.VLR_TABELA * (CPLTAB.VLR_DESC/100)),2),
  ISNULL(LOTE.QTDE_PROD, 0)) TBT ON
  TBT.CdProd = #RESULT_PRE_FINAL.CD_PROD
  AND TBT.Filial = #RESULT_PRE_FINAL.CD_FILIAL
  
  
	select
	#RESULT_FINAL.*,
	CASE
		WHEN COALESCE(PBM.CD_CONV,0) = 5
		THEN 1
		ELSE
		0
	END AS FLAG_PBM,
	CASE
		WHEN COALESCE(POPULAR.CD_FILIAL,0) <> 0 AND COALESCE(PBM.CD_CONV,0) = 2
		THEN 1
		ELSE 0
		END AS FLAG_POPULAR
	INTO #RESULT_PBM
 	FROM
	#RESULT_FINAL
	LEFT JOIN  EST_PROD_RC_CLI_CONV PBM ON
	PBM.CD_PROD = #RESULT_FINAL.CD_PROD
	LEFT JOIN (SELECT 
	* 
	FROM 
	PRC_FILIAL F
	WHERE (F.NM_USU_FARMACIA_POPULAR <> '' OR F.NM_USU_FARMACIA_POPULAR <> NULL)
	AND (F.SENHA_USU_FARMACIA_POPULAR <> '' OR F.SENHA_USU_FARMACIA_POPULAR <> NULL)
	) POPULAR ON
	POPULAR.CD_FILIAL = #RESULT_FINAL.CD_FILIAL
  
    """


def result():
    return """SELECT
	#RESULT_PBM.*,
	CASE
		WHEN #RESULT_PBM.TABLOIDE != 0.00 OR PERC_DESC != 0.00
		THEN 1
		ELSE 0 END AS FLAG_OFERTA,
	CASE
		WHEN #RESULT_PBM.ACIMA_DE != 0.00
		THEN 1
		ELSE 0 END AS FLAG_DESC_ACIMA,
	CASE
		WHEN #RESULT_PBM.QTDE_PAGUE != 0
		THEN 1
		ELSE 0 END AS FLAG_PAGUE_LEVE,
	CASE
	WHEN #RESULT_PBM.VALOR_PROD_KIT != 0
		THEN 1
		ELSE 0 END AS FLAG_KIT,
	CASE
	WHEN #RESULT_PBM.PRE_VENCIDO != 0
		THEN 1
		ELSE 0 END AS FLAG_PRE_VENCIDO,
	CASE
		WHEN CPL.QT_EST <> 0
		THEN 1
		ELSE
		0 END AS FLAG_POSSUI_ESTOQUE,
	CPL.QT_EST
	FROM
	#RESULT_PBM
	LEFT JOIN EST_PROD_CPL CPL ON
	CPL.CD_FILIAL = #RESULT_PBM.CD_FILIAL AND
	CPL.CD_PROD = #RESULT_PBM.CD_PROD
	"""


def img(cd_prod: int):
    return f"""
    select 
"ImageUrl" as img
from tbl_imagem_vtex 
where "RefId" = {cd_prod} and "IsMain" = true limit 1
"""


def config(cd_filial: int):
    return f"""
    SELECT
*
FROM PRC_FILIAL
WHERE CD_FILIAL = {cd_filial}
AND FLAG_NAO_PARTIC_INDIC = 0
"""


def recommendation(cd_prod: int, cd_filial: int):
    return f"""select
pf.produto_recomendado
from
produto_foco pf
left join foco f on
f.id = pf.promocao_id
left join filial_foco ff on
f.id = ff.promocao_id
where
pf.produto_alvo = {cd_prod} and
ff.filial_alvo = {cd_filial} and
f.data_inicio <= CURRENT_DATE and
f.data_fim >= CURRENT_DATE"""


def carousel(cd_filial):
    return f"""
    select
    id,
bannerurl,
data_inicio,
data_fim,
ativo
from
banner
where
data_inicio <= CURRENT_DATE
and data_fim >= CURRENT_DATE
and ativo = 1
and cd_filial = {cd_filial}
    """


def parametros():
    return """
    select * from parametros;
    """


def minibanner():
    return """
    select * from mini_banner m inner join banner b on b.id = m.banner_id
    where b.data_inicio <= CURRENT_DATE
    and b.data_fim >= CURRENT_DATE
    and m.ativo = 1
    and b.ativo = 1
    """


def not_found(prod_not_found):
    return f"""
    INSERT INTO public.ean_notfound(
	ean, cd_filial, data_scan)
	VALUES ({prod_not_found['ean']}, {prod_not_found['cd_filial']}, CURRENT_DATE);
    """


def select_filial(cd_filial):
    return f"""
    select
*
from scan_count
where cd_filial = {cd_filial}
    """


def insert_scan(cd_filial, cd_prod):
    return f"""
    INSERT INTO public.scan_count(
	cd_filial, scan_count, cd_prod)
	VALUES ({cd_filial}, 1, {cd_prod});
    """


def update_scan(cd_filial, count):
    return f"""
    UPDATE public.scan_count
	SET scan_count={count + 1}
	WHERE cd_filial = {cd_filial};
"""
